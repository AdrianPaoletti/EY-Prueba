import axios from "axios";
import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";
import React from "react";
import { useEffect, useRef, useState } from "react";
import ImagesList from "../components/ImagesList/ImagesList";
import { Image } from "../models/image";
import styles from "../styles/Home.module.scss";

interface HomeProps {
  imagesData: Array<Image>;
}

const Home: NextPage<HomeProps> = ({ imagesData }) => {
  const [images, setImages] = useState<Array<Image>>([]);
  const [pageNumber, setPageNumber] = useState<number>(0);
  const [reloadFlag, setReloadFlag] = useState<boolean>(false);
  const [imageLoaded, setImageLoaded] = useState(false);
  const PAGE_SIZE = 30;

  useEffect(() => {
    setImages(imagesData);
    setReloadFlag(true);
  }, []);

  useEffect(() => {
    if (pageNumber > 0) getImagesData();
  }, [pageNumber]);

  const observer = useRef(null);
  const lastElementRef = (query: HTMLDivElement) => {
    if (observer.current) observer.current.disconnect();
    observer.current = new IntersectionObserver((entries) => {
      if (entries[0].isIntersecting && reloadFlag) {
        setReloadFlag(false);
        setImageLoaded(false);
        setPageNumber(pageNumber + 1);
      }
    });
    if (query) observer.current.observe(query);
  };

  const getImagesData = async () => {
    const { data } = await axios.get(
      `https://jsonplaceholder.typicode.com/photos?_page=${pageNumber}&_limit=${PAGE_SIZE}`
    );
    console.log(data);
    setImages([...images, ...data]);
    setReloadFlag(true);
  };

  return (
    <div className={styles.home}>
      <Head>
        <title>Prueba t√©cnica EY</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.main__title}>Photos list</h1>
        <ImagesList
          lastElementRef={lastElementRef}
          images={images}
          setImages={setImages}
          setImageLoaded={setImageLoaded}
          imageLoaded={imageLoaded}
        />
      </main>
    </div>
  );
};

export const getStaticProps: GetStaticProps = async () => {
  const { data } = await axios.get(
    `https://jsonplaceholder.typicode.com/photos?_page=0&_limit=30`
  );
  return { props: { imagesData: data }, revalidate: 10 };
};

export default Home;
